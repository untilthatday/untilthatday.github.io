<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Cow Contest(POJ-3660)]]></title>
    <url>%2Fundefined%2FCow-Contest-POJ-3660%2F</url>
    <content type="text"><![CDATA[题目描述 N (1 ≤ N ≤ 100) cows, conveniently numbered 1..N, are participating in a programming contest. As we all know, some cows code better than others. Each cow has a certain constant skill rating that is unique among the competitors. The contest is conducted in several head-to-head rounds, each between two cows. If cow A has a greater skill level than cow B (1 ≤ A ≤ N; 1 ≤ B ≤ N; A ≠ B), then cow A will always beat cow B. Farmer John is trying to rank the cows by skill level. Given a list the results of M (1 ≤ M ≤ 4,500) two-cow rounds, determine the number of cows whose ranks can be precisely determined from the results. It is guaranteed that the results of the rounds will not be contradictory. 大意为有n头牛，每头牛能够打败一些牛，然后给你这些牛之间的强弱关系，问通过这些信息能够确定排名的牛的数量。 题解：本题可通过传递闭包求解，即计算能够打败自己的牛，和自己能够打败的牛的数量之和为n-1，那么这头牛的排名是可以确定的，即计算出入度之和为n-1的点的数量。代码： 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;iostream&gt;#include &lt;algorithm&gt;using namespace std;int maze[4550][4550];int n,m;void floyd()&#123; for(int k=1;k&lt;=n;k++) for(int i=1;i&lt;=n;i++) for(int j=1;j&lt;=n;j++) maze[k][i]= maze[k][i] || (maze[k][i]&amp;&amp;maze[j][i]);&#125;int main()&#123; while(cin&gt;&gt;n&gt;&gt;m)&#123; fill(maze[1],maze[1]+n*n,0); while(m--)&#123; int x,y; cin&gt;&gt;x&gt;&gt;y; maze[x][y]=1; &#125; floyd(); int ans=0,res=0; for(int i=1;i&lt;=n;i++)&#123; ans=0; for(int j=1;j&lt;=n;j++)&#123; if(i==j) continue; if(maze[i][j] || maze[j][i]) ans++; &#125; if(ans==n-1) res++; &#125; cout&lt;&lt;res&lt;&lt;endl; &#125; return 0;&#125;]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>最短路，POJ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fundefined%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.]]></content>
  </entry>
</search>
